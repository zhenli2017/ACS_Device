package greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.thdtek.acs.terminal.bean.AccessRecordBean;
import com.thdtek.acs.terminal.bean.ConfigBean;
import com.thdtek.acs.terminal.bean.FaceFeatureHexBean;
import com.thdtek.acs.terminal.bean.NowPicFeatureHexBean;
import com.thdtek.acs.terminal.bean.PersonBean;
import com.thdtek.acs.terminal.bean.TestBean;

import greendao.AccessRecordBeanDao;
import greendao.ConfigBeanDao;
import greendao.FaceFeatureHexBeanDao;
import greendao.NowPicFeatureHexBeanDao;
import greendao.PersonBeanDao;
import greendao.TestBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accessRecordBeanDaoConfig;
    private final DaoConfig configBeanDaoConfig;
    private final DaoConfig faceFeatureHexBeanDaoConfig;
    private final DaoConfig nowPicFeatureHexBeanDaoConfig;
    private final DaoConfig personBeanDaoConfig;
    private final DaoConfig testBeanDaoConfig;

    private final AccessRecordBeanDao accessRecordBeanDao;
    private final ConfigBeanDao configBeanDao;
    private final FaceFeatureHexBeanDao faceFeatureHexBeanDao;
    private final NowPicFeatureHexBeanDao nowPicFeatureHexBeanDao;
    private final PersonBeanDao personBeanDao;
    private final TestBeanDao testBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accessRecordBeanDaoConfig = daoConfigMap.get(AccessRecordBeanDao.class).clone();
        accessRecordBeanDaoConfig.initIdentityScope(type);

        configBeanDaoConfig = daoConfigMap.get(ConfigBeanDao.class).clone();
        configBeanDaoConfig.initIdentityScope(type);

        faceFeatureHexBeanDaoConfig = daoConfigMap.get(FaceFeatureHexBeanDao.class).clone();
        faceFeatureHexBeanDaoConfig.initIdentityScope(type);

        nowPicFeatureHexBeanDaoConfig = daoConfigMap.get(NowPicFeatureHexBeanDao.class).clone();
        nowPicFeatureHexBeanDaoConfig.initIdentityScope(type);

        personBeanDaoConfig = daoConfigMap.get(PersonBeanDao.class).clone();
        personBeanDaoConfig.initIdentityScope(type);

        testBeanDaoConfig = daoConfigMap.get(TestBeanDao.class).clone();
        testBeanDaoConfig.initIdentityScope(type);

        accessRecordBeanDao = new AccessRecordBeanDao(accessRecordBeanDaoConfig, this);
        configBeanDao = new ConfigBeanDao(configBeanDaoConfig, this);
        faceFeatureHexBeanDao = new FaceFeatureHexBeanDao(faceFeatureHexBeanDaoConfig, this);
        nowPicFeatureHexBeanDao = new NowPicFeatureHexBeanDao(nowPicFeatureHexBeanDaoConfig, this);
        personBeanDao = new PersonBeanDao(personBeanDaoConfig, this);
        testBeanDao = new TestBeanDao(testBeanDaoConfig, this);

        registerDao(AccessRecordBean.class, accessRecordBeanDao);
        registerDao(ConfigBean.class, configBeanDao);
        registerDao(FaceFeatureHexBean.class, faceFeatureHexBeanDao);
        registerDao(NowPicFeatureHexBean.class, nowPicFeatureHexBeanDao);
        registerDao(PersonBean.class, personBeanDao);
        registerDao(TestBean.class, testBeanDao);
    }
    
    public void clear() {
        accessRecordBeanDaoConfig.getIdentityScope().clear();
        configBeanDaoConfig.getIdentityScope().clear();
        faceFeatureHexBeanDaoConfig.getIdentityScope().clear();
        nowPicFeatureHexBeanDaoConfig.getIdentityScope().clear();
        personBeanDaoConfig.getIdentityScope().clear();
        testBeanDaoConfig.getIdentityScope().clear();
    }

    public AccessRecordBeanDao getAccessRecordBeanDao() {
        return accessRecordBeanDao;
    }

    public ConfigBeanDao getConfigBeanDao() {
        return configBeanDao;
    }

    public FaceFeatureHexBeanDao getFaceFeatureHexBeanDao() {
        return faceFeatureHexBeanDao;
    }

    public NowPicFeatureHexBeanDao getNowPicFeatureHexBeanDao() {
        return nowPicFeatureHexBeanDao;
    }

    public PersonBeanDao getPersonBeanDao() {
        return personBeanDao;
    }

    public TestBeanDao getTestBeanDao() {
        return testBeanDao;
    }

}
